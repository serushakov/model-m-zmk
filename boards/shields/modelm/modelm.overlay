#include <dt-bindings/zmk/matrix_transform.h>

/ {
	chosen {
		zephyr,console = &cdc_acm_uart;
		zmk,kscan = &kscan1;
		zmk,matrix-transform = &default_transform;
	};
	
	// kscan1: kscan {
	//     compatible = "zmk,kscan-gpio-direct";
	//     label = "kscan1";
	
	//     input-gpios =
	//         <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	// 	;
	// };
	
	// kscan1: kscan {
	//     compatible = "zmk,kscan-gpio-direct";
	//     label = "kscan1";
	
	//     input-gpios =
	//         <&ext0 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
	//         <&ext0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
	// };
	
	kscan1: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "row2col";
		
		col-gpios =
		<&ext0 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		<&ext0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		
		row-gpios =
		<&gpio0 0 GPIO_ACTIVE_HIGH>,
		<&gpio0 1 GPIO_ACTIVE_HIGH>,
		<&gpio0 2 GPIO_ACTIVE_HIGH>,
		<&gpio0 3 GPIO_ACTIVE_HIGH>,
		<&gpio0 3 GPIO_ACTIVE_HIGH>,
		<&gpio0 3 GPIO_ACTIVE_HIGH>,
		<&gpio0 3 GPIO_ACTIVE_HIGH>,
		<&gpio0 3 GPIO_ACTIVE_HIGH>;
	};
	
	default_transform: matrix_transform {
		compatible = "zmk,matrix-transform";
		rows = <8>;
		columns = <16>;
		
		map = <
		/*ESC             F1       F2       F3       F4       F5       F6       F7       F8       F9        F10       F11       F12         PSCRN     SCLK      PAUSE_BREAK*/
		RC(0, 2)          RC(2, 3) RC(2, 3) RC(1, 4) RC(0, 4) RC(0, 6) RC(0, 8) RC(1, 9) RC(2, 9) RC(2, 6)  RC(3, 6)  RC(3, 11) RC(3, 12)   RC(3, 15) RC(4, 15) RC(6, 14)
		
		/*NUHS   1        2        3        4        5        6        7        8        9        0         MINUS     EQUAL     BACKSPACE   INSERT    HOME      PAGE_UP     NUM_LOCK  KP_SLASH   KP_ASTERISK  KP_MINUS*/
		RC(2, 2) RC(3, 2) RC(3, 3) RC(3, 4) RC(3, 5) RC(2, 5) RC(2, 7) RC(3, 7) RC(3, 8) RC(3, 9) RC(3, 10) RC(2, 10) RC(2, 8)  RC(1, 6)    RC(2, 12) RC(2, 14) RC(2, 13)   RC(6, 11) RC(6, 12)  RC(6, 13)    RC(7, 13)
		/*TAB    Q        W        E        R        T        Y        U        I        O        P         LBRC      RBRC                  DELETE    END       PAGE_DOWN   KP_7      KP_8       KP_9        KP_PLUS*/
		RC(1, 2) RC(4, 2) RC(4, 3) RC(4, 4) RC(4, 5) RC(1, 5) RC(1, 7) RC(4, 7) RC(4, 8) RC(4, 9) RC(4, 10) RC(1, 10) RC(1, 9)              RC(2, 11) RC(2, 14) RC(2, 13)   RC(4, 11) RC(4, 12)  RC(4, 13)    RC(4, 14)
		/*CAPS   A        S        D        F        G        H        J        K        L        SEMI      QUOTE     BSLH      ENTER                                       KP_4      KP_5       KP_6*/
		RC(1, 3) RC(5, 2) RC(5, 3) RC(5, 4) RC(5, 5) RC(0, 5) RC(0, 7) RC(5, 7) RC(5, 8) RC(5, 9) RC(5, 10) RC(5, 10) RC(0, 10) RC(6, 6)                                    RC(1, 11) RC(1, 12)  RC(1, 13)
		/*LSHIFT NUBS     Z        X        C        V        B        N        M        COMMA    DOT       SLASH               RSHIFT                UP                    KP_1      KP_2       KP_3         KP_ENTER*/
		RC(1, 1) RC(0, 3) RC(6, 2) RC(6, 3) RC(6, 4) RC(6, 5) RC(7, 5) RC(7, 7) RC(6, 7) RC(6, 8) RC(6, 9)  RC(7, 10)           RC(6, 1)              RC(0, 14)             RC(5, 11) RC(5, 12)  RC(5, 13)    RC(5, 14)
		/*LCTRL             LALT                            SPACE                                           RALT                RCTRL       LEFT      DOWN      RIGHT       KP0       KP_DOT*/
		RC(2, 0)            RC(0, 15)                       RC(7, 6)                                        RC(7, 15)           RC(6, 0)    RC(7, 14) RC(7, 11) RC(7, 12)   RC(0, 12) RC(0, 13)
		>;
	};
};


&i2c0 {
	status = "okay";
	compatible = "nordic,nrf-twi";
	status = "okay";
	pinctrl-0 = <&i2c0_default>;
	pinctrl-1 = <&i2c0_sleep>;
	pinctrl-names = "default", "sleep";
	clock-frequency = <I2C_BITRATE_FAST>;
	
	ext0: mcp23017@20 {
		compatible = "microchip,mcp230xx";
		status = "okay";
		gpio-controller;
		reg = <0x20>;
		#gpio-cells = <2>;
		ngpios = <16>;
	};
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
	};
};
