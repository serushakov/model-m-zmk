#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {

            bindings = <
    &kp ESC     &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp MINUS   &kp EQUAL       &kp BSPC        &tog 1          &kp KP_EQUAL    &kp KP_SLASH    &kp KP_ASTERISK
    &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P       &kp LBKT    &kp RBKT                        &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp KP_PLUS
    &kp LCTRL   &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp APOS    &kp RET                         &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp KP_MINUS
    &kp LSHIFT  &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH                                                &kp KP_N1       &kp KP_N2       &kp KP_N3
    &kp RSHIFT  &kp LALT    &kp LCMD    &kp GRAVE                           &kp SPACE               &kp BSLH    &kp LEFT    &kp RIGHT   &kp DOWN    &kp UP                        &kp KP_N0                       &kp KP_DOT      &kp KP_ENTER
    >;
        };

        function_layer {

            bindings = <
    &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10      &kp C_VOL_DN   &kp C_VOL_UP    &kp DELETE   &trans     &trans      &trans      &trans
    &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans       &trans         &trans                       &trans     &trans      &trans      &trans
    &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans       &trans         &trans                       &trans     &trans      &trans      &trans
    &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans                                                   &trans     &trans      &trans
    &trans      &trans      &trans      &trans                              &trans                  &trans      &trans      &trans       &trans         &trans                       &trans                 &trans      &trans
    >;
        };
    };
 };